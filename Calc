import java.util.InputMismatchException;
import java.util.Scanner;


public class Calc {
    static Scanner scanner = new Scanner(System.in);
    static int numb1, numb2;
    static char oper;
    static int res;

    public static void main(String[] args) throws Exception {
        String sk = scanner.nextLine();


        char[] under_char = new char[10];
        for (int i = 0; i < sk.length(); i++) {
            under_char[i] = sk.charAt(i);
            if (under_char[i] == '+') {
                oper = '+';
            }
            if (under_char[i] == '-') {
                oper = '-';
            }
            if (under_char[i] == '*') {
                oper = '*';
            }
            if (under_char[i] == '/') {
                oper = '/';
            }
        }
        String under_charString = String.valueOf(under_char);
        String[] blacks = under_charString.split("\\s+");
        if (blacks.length != 3) {
            throw new Exception("Перебор ");
        }
        String stable00 = blacks[0];
        String stable01 = blacks[2];
        String string03 = stable01.trim();

        if (Character.isDigit(stable00.charAt(0)) && Character.isDigit(string03.charAt(0))) {
            numb1 = Integer.parseInt(stable00);
            numb2 = Integer.parseInt(string03);
            res = calculate(numb1, numb2, oper);
            System.out.println(res);
        } else {
            numb1 = romanToNumber(stable00);
            numb2 = romanToNumber(string03);

            if (numb1 < 0 || numb2 < 0) {
                throw new Exception("Invalid roman numeral");
            }
            res = calculate(numb1, numb2, oper);

            if (Character.isDigit(stable00.charAt(0))) {
                System.out.println(res);
            } else {
                if (res <= 0) {
                    throw new Exception();
                }else {
                    String resultRoman = convertNumToRoman(res);
                    System.out.println(resultRoman);
                }
            }
        }
    }


    private static String convertNumToRoman (int numArabian) {
        String[] roman = {"O", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII", "XIII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX", "XX",
                "XXI", "XXII", "XXIII", "XXIV", "XXV", "XXVI", "XXVII", "XXVIII", "XXIX", "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV", "XXXV", "XXXVI", "XXXVII", "XXXVIII", "XXXIX", "XL",
                "XLI", "XLII", "XLIII", "XLIV", "XLV", "XLVI", "XLVII", "XLVIII", "XLIX", "L", "LI", "LII", "LIII", "LIV", "LV", "LVI", "LVII", "LVIII", "LIX", "LX",
                "LXI", "LXII", "LXIII", "LXIV", "LXV", "LXVI", "LXVII", "LXVIII", "LXIX", "LXX",
                "LXXI", "LXXII", "LXXIII", "LXXIV", "LXXV", "LXXVI", "LXXVII", "LXXVIII", "LXXIX", "LXXX",
                "LXXXI", "LXXXII", "LXXXIII", "LXXXIV", "LXXXV", "LXXXVI", "LXXXVII", "LXXXVIII", "LXXXIX", "XC",
                "XCI", "XCII", "XCIII", "XCIV", "XCV", "XCVI", "XCVII", "XCVIII", "XCIX", "C"
        };
        final String s = roman[numArabian];
        return s;
    }
    private static int romanToNumber (String roman) {
            try {
            if (roman.equals("I")) {
                return 1;
            } else if (roman.equals("II")) {
                return 2;
            } else if (roman.equals("III")) {
                return 3;
            } else if (roman.equals("IV")) {
                return 4;
            } else if (roman.equals("V")) {
                return 5;
            } else if (roman.equals("VI")) {
                return 6;
            } else if (roman.equals("VII")) {
                return 7;
            } else if (roman.equals("VIII")) {
                return 8;
            } else if (roman.equals("IX")) {
                return 9;
            } else if (roman.equals("X")) {
                return 10;
            }
            } catch (InputMismatchException e) {
                throw new InputMismatchException("Неверный формат данных");
            }
            return 0;
    }

    private static int calculate(int num1,  int num2, char op) throws Exception {
        if (num1 <= 0 || num2 <= 0 || num1 >= 11 || num2 >= 11) {
            throw new Exception(" Введитённые цифры не соответствуют диапозону от 1 до 10 включительно ");
        }
        int res = 0;
        switch (op) {
            case '+':
                res = num1 + num2;
                break;
            case '-':
                res = num1 - num2;
                break;
            case '*':
                res = num1 * num2;
                break;
            case '/':

                try {
                    res = num1 / num2;
            }catch (ArithmeticException | InputMismatchException e) {
                    System.out.println("АА");
                    System.out.println( "2");
                    break;
                }
                break;

            default:
                throw new Exception();
        }

        return res;
    }
}
